name: Manual Release (legacy)

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and Release
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            binary: raygun
            name: raygun-linux-x86_64
          - os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
            binary: raygun
            name: raygun-linux-aarch64
          - os: macos-14
            target: aarch64-apple-darwin
            binary: raygun
            name: raygun-macos-arm64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Linux build deps
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends build-essential pkg-config cmake nasm zlib1g-dev
          if [[ "${{ matrix.target }}" == "aarch64-unknown-linux-gnu" ]]; then
            cargo install cross --git https://github.com/cross-rs/cross
          fi

      - name: Build
        run: |
          set -euo pipefail
          if [[ "${{ matrix.target }}" == "aarch64-unknown-linux-gnu" ]]; then
            cross build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi
          cd target/${{ matrix.target }}/release
          tar -czf ../../../${{ matrix.name }}.tar.gz ${{ matrix.binary }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}.tar.gz
